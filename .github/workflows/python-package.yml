name: CCRS_Library package

on:
  push:
    branches: [ "main" ]
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install  build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package
      run: |
        python -m build
    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: package-dist
        path: dist/

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: package-dist
          path: dist/
      - name: Get current date
        id: date
        run: echo "RELEASE_DATE=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.RELEASE_DATE }}
          name: Release v${{ env.RELEASE_DATE }}
          body: "This is an automated release of the latest main branch."
          draft: false
          prerelease: false
          files: dist/*
      - name: pypi-publish
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://upload.pypi.org/legacy/
          packages-dir: dist
          verify-metadata: true
          skip-existing: true
          verbose: true

                
